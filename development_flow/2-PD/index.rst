.. index:: PD

【``PD``】詳細設計
=====================
| 仕様を洗い出し、ソースコードレベルでの変更点や条件の分岐の過不足を検討する。

概要
---------
| 開発を担当する大抵の場合、直接指示が出て自席で作業するのはここからとなる。
| 渡された仕様書等から、指示された内容の実装方法を検討する。
| その際に仕様の穴などがあれば確認をする。

 .. note::
  | (DRBFMを除けば)最も時間を要する工程である。


内容
-----------
| 設計、開発を指示された場合、おそらく最初に取り掛かる項目である。
| 要求される仕様内容をソースに落とし込むには多くの検討事項がある。
| その検討事項を如何に多く、隙間なくするかがバグを生まない仕事に繋がる。

.. note::
    | 基本的にここに書かれている項目が必要なタイミングとは以下の2回である。
    |   * そもそもの開発時
    |   * 不具合が発生した時
    | その為、不具合が発生した時に **知らない誰かが読み返して内容が分かる** ものを作成する事を心掛ける。


作成方法
------------
| 大抵Excelで作成する事になる。
| ちゃんとしたドキュメントとしての体裁を整える場合、以下のような項目を作成する。

1. **表紙**
    何についての設計書なのかを示し、必要なら認可した人のサインとドキュメント番号を記載する。
#. **変更履歴**
    改版した場合、変更内容を記述する。
#. **概要**
    | 何について書いてあるのかを書く。
    | 大量の資料から探している時にここだけ見れば目的の資料かどうかを判断できるようにする為。
#. **参考文献**
    | 参考にした仕様書や設計書を書く。
    | 特に重要なのはその版数であり、いつの仕様書に対して作成されたものなのかを書く。
    | これも後で探す時に判断しやすくするためである。
#. **要求仕様**
    | 仕様書から必要な個所だけ引っ張ってくる。
    | 無くてもいいが、ふとした時に対応する版数の仕様書を探すのが非常に面倒な為あった方がいい。
#. **詳細設計**
    | 要求仕様を受けてどこをどう変更するのかを記述する。
    | 母体がある場合は、以下を書くようにすると面倒が少ない。
    |   * 母体の構造
    |   * 母体のどこに追加するのか
    |   * 関連する個所の一連の流れで変化する内容は何か
    | ソースコードレベルまで落とさなくてもいいが、
    | 読めば落とし込めるレベルまでは記載する事。
    | また、この記述内容がそのまま :doc:`../5-IT/index` で行う内容に直結する為、
    | どういう試験内容を行うべきかが想起できる様に記載する事。
    | その為にもまずは以下の項目を作成する事を念頭に入れる。

    .. toctree::
        :glob:
        :maxdepth: 1

        *

    .. note::
        | 図や表内に注釈がある場合は、欄外に書かずに直接吹き出しを挿入して記述する。
        | これは、後で読み返す必要が出た際に見やすい表や図だけを斜め読みし、細かい地の文を読み飛ばすからである。
        | 大事な事や注意すべき事は必ず図中と関連付けて誰が見ても一目瞭然となるようにすること。

    .. warning::
        | この時点で検討できていない事 = ソースコードに反映できない事 = バグの素
        | である為、ここをしっかり行うことが大切である。
