.. index:: 組み込み用語集

.. _組み込み用語集:

組み込み用語集
==================
| 組み込み開発に置ける用語を解説する。


.. index:: レジスタ

.. _レジスタ:

レジスタ
---------

| マイコンの動作を制御するために使用される。
| 大別して専用レジスタと汎用レジスタがある。

.. index:: 専用レジスタ
    single: レジスタ; 専用レジスタ

.. _専用レジスタ:

専用レジスタ
^^^^^^^^^^^^^

| マイコンの各機能を使用する際にその挙動の指定や結果が格納されるレジスタ。
| 一つの事をしようとすると大抵複数個所の設定を行う必要がある。


.. index:: 汎用レジスタ
    single: レジスタ; 汎用レジスタ

.. _汎用レジスタ:

汎用レジスタ
^^^^^^^^^^^^^

| マイコンが動作しプログラムを実行するために使用するレジスタ
| ローカルバッファ、現在実行中のプログラムのアドレス、現在の使用中のスタックのアドレス等を格納している。

.. index:: プログラムカウンタ

.. _プログラムカウンタ:

プログラムカウンタ
-------------------------
| 現在どこのアドレスのプログラムを実行しているかを示すものである。


.. index:: GND

.. _GND:

GND
============================
| グランド
| 電位の基準になる地点
| ここが0Vである。


.. index:: High

.. _High:

High
============================
| 電位がマイコンのVCCと同値であることを意味する。
| 大体3.3Vあたりのはず。
| デジタルでいうと1

.. index:: Low

.. _Low:

Low
============================
| 電位が :ref:`GND` と等しいことを意味する。
| デジタルでいうと0

.. index:: ON

.. _ON:

ON
============================
| ここでいうONとは状態がONであるという事である。
| 必ずしも :ref:`High` であることを意味しない。

.. note::
    | 例えば基盤上で線の論理が途中で反転されるなどして、
    | マイコンからの出力を :ref:`Low` にすると対象のデバイスが動作を開始する場合、
    | その端子を「ONにする」とは、その端子を :ref:`Low` にすることである。

.. index:: OFF

.. _OFF:

OFF
============================
| :ref:`ON` 参照


.. index:: チャタリング

.. _チャタリング:

チャタリング
============================
| スイッチなどの動作で一瞬電圧が荒ぶること
| `Wiki <https://ja.wikipedia.org/wiki/%E3%83%81%E3%83%A3%E3%82%BF%E3%83%AA%E3%83%B3%E3%82%B0>`_ 参照
| これが発生する事を前提として、何ms以上同じ値が続けば確定とするという検知手法を :ref:`ポーリング` といい、
| チャタリングの影響を回避する事を「チャタリングを吸収する」という。
| これが発生する事を「チャタる」ともいう。
| 基本的にこれが発生するような端子を監視するのに割り込みは使用しない。


.. index:: PULLUP

.. _PULLUP:

PULLUP
============================
| 端子に接続されている配線の電位を、誰も制御していなければ :ref:`High` で固定させること。
| 主にマイコン間の通信ラインで見かける。
| 基盤上の配線は接続している誰かが何かしらの値を出力する事で電圧が固定される。
| しかし、繋がっている両端のマイコンが共に入力になると、直前の値や隣の配線などの影響を受け値が不安定になる。
| そんな不安定な値は欲しくない為、電子回路的にデフォルト値を設けるために使用される。

.. index:: PULLDOWN

.. _PULLDOWN:

PULLDOWN
============================
| :ref:`PULLUP` の逆。
| 滅多に使用されない。


.. index:: LowActive

.. _LowActive:

LowActive
============================
| 自身の生存や何かしらの異常を通知するために、
| 通知する時に :ref:`Low` 、そうでない時に :ref:`High` とすること。
| そして大体その線自体は :ref:`PULLUP` されている。
| 特に使用されるマイコンの起動完了通知を例として挙げる。

.. blockdiag::

    blockdiag {
        MicomA <- MicomB;
    }

| このようにMicomAとMicomBがそれぞれの端子を単純結線しているとする。
| MicomAはMicomBが起動を完了して、通信を開始してもいいかどうかを判断しようとしている。
| 尚、MicomBはリセットから動作を開始する為、全ての端子は一度GPIOの入力となる。
| この時、MicomAもMicomBも入力となる為、 :ref:`PULLUP` しておく必要がある。
| そしてMicomBが起動を完了した後に端子を :ref:`Low` 出力することでMicomAに完了を通知する。

